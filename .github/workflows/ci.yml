name: CI
on:
  workflow_dispatch:
  push:

jobs:
  lint:
    name: Lint
    runs-on: self-hosted
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 0
      - name: Super-Linter
        uses: super-linter/super-linter@v7.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_CSHARP: true
  build-csharp:
    needs: lint
    name: Build C#
    runs-on: self-hosted
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: 8.0.x
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2.1.6
        with:
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          path: |
            **/bin
            **/obj
            ~/.nuget/packages
      - name: Setup Nuget Sources
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/SaveApis/index.json -n github -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_PRO_URL }} -n hangfire-pro -u ${{ secrets.HANGFIRE_PRO_USER }} -p ${{ secrets.HANGFIRE_PRO_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_ACE_URL }} -n hangfire-ace -u ${{ secrets.HANGFIRE_ACE_USER }} -p ${{ secrets.HANGFIRE_ACE_TOKEN }} --store-password-in-clear-text
      - name: Restore dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore --nologo -p:WarnAsError=true
  build-docker:
    needs: lint
    name: Build Docker
    runs-on: self-hosted
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v6.7.0
        with:
          push: false
          context: .
          file: ./src/Bot/Dockerfile
          tags: registry.digitalocean.com/saveapis/savebot:ci
          secrets: |
            nuget_user=${{ github.actor }}
            nuget_token=${{ secrets.GITHUB_TOKEN }}
            hangfire_pro_url=${{ secrets.HANGFIRE_PRO_URL }}
            hangfire_pro_user=${{ secrets.HANGFIRE_PRO_USER }}
            hangfire_pro_token=${{ secrets.HANGFIRE_PRO_TOKEN }}
            hangfire_ace_url=${{ secrets.HANGFIRE_ACE_URL }}
            hangfire_ace_user=${{ secrets.HANGFIRE_ACE_USER }}
            hangfire_ace_token=${{ secrets.HANGFIRE_ACE_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  test:
    needs: build-csharp
    name: Test
    runs-on: self-hosted
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: 8.0.x
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2.1.6
        with:
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          path: |
            **/bin
            **/obj
            ~/.nuget/packages
      - name: Setup Nuget Sources
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/SaveApis/index.json -n github -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_PRO_URL }} -n hangfire-pro -u ${{ secrets.HANGFIRE_PRO_USER }} -p ${{ secrets.HANGFIRE_PRO_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.HANGFIRE_ACE_URL }} -n hangfire-ace -u ${{ secrets.HANGFIRE_ACE_USER }} -p ${{ secrets.HANGFIRE_ACE_TOKEN }} --store-password-in-clear-text
      - name: Restore dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: dotnet restore
      - name: Test
        run: dotnet test --configuration Release --no-restore --nologo